{"version":3,"file":"fetch.spec.cjs","sources":["../../test/fetch.spec.js"],"sourcesContent":["import { FormData } from \"@web-std/form-data\"\nimport { Blob } from \"@web-std/file\"\nimport { Response } from \"@web-std/fetch\"\nimport { assert } from \"./test.js\"\n\n/**\n * @param {import('./test').Test} test\n */\nexport const test = test => {\n  test(\"node-fetch recognizes form-data\", async () => {\n    const data = new FormData()\n    data.set(\"file\", new Blob([\"hello\"]))\n    // @ts-ignore\n    const response = new Response(data)\n\n    assert.equal(response.headers.has(\"content-type\"), true)\n    const type = response.headers.get(\"content-type\") || \"\"\n    assert.equal(\n      /multipart\\/form-data;\\s*boundary=/.test(type),\n      true,\n      \"multipart/form-data content type\"\n    )\n\n    const text = await response.text()\n    assert.equal(text.includes(\"hello\"), true)\n  })\n}\n"],"names":["FormData","Blob","Response","assert"],"mappings":";;;;;;;;;AAKA;AACA;AACA;AACY,MAAC,IAAI,GAAG,IAAI,IAAI;AAC5B,EAAE,IAAI,CAAC,iCAAiC,EAAE,YAAY;AACtD,IAAI,MAAM,IAAI,GAAG,IAAIA,YAAQ,GAAE;AAC/B,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAIC,SAAI,CAAC,CAAC,OAAO,CAAC,CAAC,EAAC;AACzC;AACA,IAAI,MAAM,QAAQ,GAAG,IAAIC,cAAQ,CAAC,IAAI,EAAC;AACvC;AACA,IAAIC,aAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,IAAI,EAAC;AAC5D,IAAI,MAAM,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,GAAE;AAC3D,IAAIA,aAAM,CAAC,KAAK;AAChB,MAAM,mCAAmC,CAAC,IAAI,CAAC,IAAI,CAAC;AACpD,MAAM,IAAI;AACV,MAAM,kCAAkC;AACxC,MAAK;AACL;AACA,IAAI,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,GAAE;AACtC,IAAIA,aAAM,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,EAAC;AAC9C,GAAG,EAAC;AACJ;;;;"}