{"version":3,"file":"form-data.spec.cjs","sources":["../../test/form-data.spec.js"],"sourcesContent":["import { FormData } from \"@web-std/form-data\"\nimport * as lib from \"@web-std/form-data\"\nimport { File, Blob } from \"@web-std/file\"\nimport { assert } from \"./test.js\"\n\n/**\n * @param {import('./test').Test} test\n */\nexport const test = test => {\n  test(\"test baisc\", async () => {\n    assert.equal(typeof FormData, \"function\")\n    assert.isEqual(typeof lib.FormData, \"function\")\n  })\n\n  if (globalThis.window === globalThis) {\n    test(\"exports built-ins\", () => {\n      assert.equal(lib.FormData, globalThis.FormData)\n    })\n  }\n\n  // @see https://github.com/jsdom/jsdom/blob/5279cfda5fe4d52f04b2eb6a801c98d81f9b55da/test/web-platform-tests/to-upstream/XMLHttpRequest/formdata-set-blob.HTMLFormElement\n  test(\"blob without type\", () => {\n    const formData = new FormData()\n    formData.set(\"blob-1\", new Blob())\n    const blob1 = /** @type {File} */ (formData.get(\"blob-1\"))\n    assert.equal(blob1.constructor.name, \"File\")\n    assert.equal(blob1.name, \"blob\")\n    assert.equal(blob1.type, \"\")\n    assert.isLessThan(\n      Math.abs(blob1.lastModified - Date.now()),\n      200,\n      \"lastModified should be now\"\n    )\n  })\n\n  test(\"blob with type\", () => {\n    const formData = new FormData()\n    formData.set(\"blob-2\", new Blob([], { type: \"text/plain\" }))\n    const blob2 = /** @type {File} */ (formData.get(\"blob-2\"))\n    assert.equal(blob2.constructor.name, \"File\")\n    assert.equal(blob2.name, \"blob\")\n    assert.equal(blob2.type, \"text/plain\")\n    assert.isLessThan(\n      Math.abs(blob2.lastModified - Date.now()),\n      200,\n      \"lastModified should be now\"\n    )\n  })\n\n  test(\"blob with custom name\", () => {\n    const formData = new FormData()\n    formData.set(\"blob-3\", new Blob(), \"custom name\")\n    const blob3 = /** @type {File} */ (formData.get(\"blob-3\"))\n    assert.equal(blob3.constructor.name, \"File\")\n    assert.equal(blob3.name, \"custom name\")\n    assert.equal(blob3.type, \"\")\n    assert.isLessThan(\n      Math.abs(blob3.lastModified - Date.now()),\n      200,\n      \"lastModified should be now\"\n    )\n  })\n\n  test(\"file without lastModified or custom name\", () => {\n    const formData = new FormData()\n    formData.set(\"file-1\", new File([], \"name\"))\n    const file1 = /** @type {File} */ (formData.get(\"file-1\"))\n    assert.equal(file1.constructor.name, \"File\")\n    assert.equal(file1.name, \"name\")\n    assert.equal(file1.type, \"\")\n    assert.isLessThan(\n      Math.abs(file1.lastModified - Date.now()),\n      200,\n      \"lastModified should be now\"\n    )\n  })\n\n  test(\"file with lastModified and custom name\", () => {\n    const formData = new FormData()\n    formData.set(\n      \"file-2\",\n      new File([], \"name\", { lastModified: 123 }),\n      \"custom name\"\n    )\n    const file2 = /** @type {File} */ (formData.get(\"file-2\"))\n    assert.equal(file2.constructor.name, \"File\")\n    assert.equal(file2.name, \"custom name\")\n    assert.equal(file2.type, \"\")\n    assert.equal(file2.lastModified, 123, \"lastModified should be 123\")\n  })\n\n  test(\"throws on few args\", () => {\n    const data = new FormData()\n    // @ts-expect-error\n    assert.throws(() => data.append(\"key\"))\n    // @ts-expect-error\n    assert.throws(() => data.set(\"key\"))\n    // @ts-expect-error\n    assert.throws(() => data.get())\n    // @ts-expect-error\n    assert.throws(() => data.getAll())\n    // @ts-expect-error\n    assert.throws(() => data.delete())\n  })\n\n  test(\"only value\", () => {\n    const data = new FormData()\n    data.set(\"key\", \"value1\")\n    assert.equal(data.get(\"key\"), \"value1\")\n  })\n\n  test(\"second value\", () => {\n    const data = new FormData()\n    data.set(\"key\", \"value1\")\n    data.append(\"key\", \"value2\")\n    assert.equal(data.get(\"key\"), \"value1\")\n  })\n\n  test(\"null value\", () => {\n    const data = new FormData()\n    // @ts-expect-error\n    data.set(\"key\", null)\n    assert.equal(data.get(\"key\"), \"null\")\n  })\n\n  test(\"has\", () => {\n    var data = new FormData()\n    data.append(\"n1\", \"value\")\n    assert.equal(data.has(\"n1\"), true)\n    assert.equal(data.has(\"n2\"), false)\n    data.append(\"n2\", \"value\")\n    assert.equal(data.has(\"n1\"), true)\n    assert.equal(data.has(\"n2\"), true)\n    data.append(\"n3\", new Blob([\"content\"]))\n    assert.equal(data.has(\"n3\"), true)\n  })\n\n  test(\"should return the keys/values/entres as they are appended\", () => {\n    const data = new FormData()\n    data.append(\"keyA\", \"val1\")\n    data.append(\"keyA\", \"val2\")\n    data.append(\"keyB\", \"val3\")\n    data.append(\"keyA\", \"val4\")\n\n    assert.deepEqual([...data.keys()], [\"keyA\", \"keyA\", \"keyB\", \"keyA\"])\n    assert.deepEqual([...data.values()], [\"val1\", \"val2\", \"val3\", \"val4\"])\n    assert.deepEqual(\n      [...data],\n      [\n        [\"keyA\", \"val1\"],\n        [\"keyA\", \"val2\"],\n        [\"keyB\", \"val3\"],\n        [\"keyA\", \"val4\"],\n      ]\n    )\n  })\n\n  test(\"overwrite first matching key\", () => {\n    const data = new FormData()\n    data.append(\"keyA\", \"val1\")\n    data.append(\"keyA\", \"val2\")\n    data.append(\"keyB\", \"val3\")\n    data.append(\"keyA\", \"val4\")\n\n    data.set(\"keyA\", \"val3\")\n    assert.deepEqual(\n      [...data],\n      [\n        [\"keyA\", \"val3\"],\n        [\"keyB\", \"val3\"],\n      ]\n    )\n  })\n\n  test(\"appends value when no matching\", () => {\n    const data = new FormData()\n    data.append(\"keyB\", \"val3\")\n    data.set(\"keyA\", \"val3\")\n\n    assert.deepEqual(\n      [...data],\n      [\n        [\"keyB\", \"val3\"],\n        [\"keyA\", \"val3\"],\n      ]\n    )\n  })\n\n  test(\"FormData.delete()\", () => {\n    var data = new FormData()\n    data.append(\"name\", \"value\")\n    assert.equal(data.has(\"name\"), true)\n    data.delete(\"name\")\n    assert.equal(data.has(\"name\"), false)\n\n    data.append(\"name\", new Blob([\"content\"]))\n    assert.equal(data.has(\"name\"), true)\n    data.delete(\"name\")\n    assert.equal(data.has(\"name\"), false)\n\n    data.append(\"n1\", \"v1\")\n    data.append(\"n2\", \"v2\")\n    data.append(\"n1\", \"v3\")\n    data.delete(\"n1\")\n    assert.equal(data.has(\"n1\"), false)\n\n    assert.deepEqual([...data], [[\"n2\", \"v2\"]])\n  })\n\n  test(\"Shold return correct filename with File\", () => {\n    const data = new FormData()\n    data.set(\"key\", new File([], \"doc.txt\"))\n    const file = /** @type {File} */ (data.get(\"key\"))\n    assert.equal(\"doc.txt\", file.name)\n  })\n\n  test(\"Shold return correct filename with Blob filename\", () => {\n    const data = new FormData()\n    data.append(\"key\", new Blob(), \"doc.txt\")\n    const file = /** @type {File} */ (data.get(\"key\"))\n    assert.equal(\"doc.txt\", file.name)\n  })\n\n  test(\"Shold return correct filename with just Blob\", () => {\n    const data = new FormData()\n    data.append(\"key\", new Blob())\n    const file = /** @type {File} */ (data.get(\"key\"))\n    assert.equal(\"blob\", file.name)\n  })\n\n  test.skip(\"complicated form\", () => {\n    const data = new FormData()\n    data.append(\"blobs\", new Blob([\"basic\"]))\n    data.append(\"blobs\", new Blob([\"with-type\"], { type: \"text/plain\" }))\n    data.append(\n      \"blobs\",\n      new Blob([\"with-name\"], { type: \"text/markdown\" }),\n      \"file.md\"\n    )\n    data.append(\"files\", new File([\"basic\"], \"basic\"))\n    data.append(\n      \"files\",\n      new File([\"with-type\"], \"file.txt\", { type: \"text/plain\" })\n    )\n    data.append(\n      \"files\",\n      new File([\"renamed\"], \"orig.txt\", { type: \"text/plain\" }),\n      \"rename.md\"\n    )\n  })\n}\n"],"names":["assert","FormData","lib","Blob","File","file"],"mappings":"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"}